name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version from package.json
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Check if tag exists
      id: tag_exists
      run: |
        if git ls-remote --tags origin "v${{ steps.version.outputs.version }}" | grep -q "v${{ steps.version.outputs.version }}"; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} does not exist"
        fi
        
    - name: Create Release Tag
      if: steps.tag_exists.outputs.exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"
        echo "Created and pushed tag v${{ steps.version.outputs.version }}"
        
    - name: Debug tag info
      run: |
        echo "Current git ref: ${{ github.ref }}"
        echo "Tag name: v${{ steps.version.outputs.version }}"
        git ls-remote --tags origin | grep "v${{ steps.version.outputs.version }}" || echo "Tag not found in remote"
        
    - name: Skip tag creation
      if: steps.tag_exists.outputs.exists == 'true'
      run: |
        echo "Tag v${{ steps.version.outputs.version }} already exists, skipping tag creation"
        
    - name: Check if release exists
      id: release_exists
      run: |
        # Check if a release already exists for this tag
        if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }}" \
          | grep -q '"id"'; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Release for tag v${{ steps.version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "No release found for tag v${{ steps.version.outputs.version }}"
        fi
        
    - name: Create Draft Release
      if: steps.release_exists.outputs.exists == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.version.outputs.version }}"
        draft: true
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        fail_on_unmatched_files: false
        generate_release_notes: false
        
    - name: Skip Release Creation
      if: steps.release_exists.outputs.exists == 'true'
      run: |
        echo "Release for tag v${{ steps.version.outputs.version }} already exists, skipping creation"
        
    - name: Trigger Windows Build
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: build-windows
        client-payload: '{"release_version": "${{ steps.version.outputs.version }}"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Trigger Ubuntu 22 Build
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: build-ubuntu22
        client-payload: '{"release_version": "${{ steps.version.outputs.version }}"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Trigger Ubuntu 24 Build
      uses: peter-evans/repository-dispatch@v3
      with:
        event-type: build-ubuntu24
        client-payload: '{"release_version": "${{ steps.version.outputs.version }}"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Wait for builds to complete
      run: |
        echo "Waiting for builds to complete..."
        echo "Builds can take up to 3.5 hours, waiting 4 hours to be safe..."
        sleep 14400  # Wait 4 hours for builds to complete

    - name: Download all artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-windows.yml
        path: artifacts/windows
        name: guardian-win64
        allow_forks: false

    - name: Download Ubuntu 22 artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-ubuntu22.yml
        path: artifacts/ubuntu22
        name: guardian-linux64-ubuntu22
        allow_forks: false

    - name: Download Ubuntu 24 artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-ubuntu24.yml
        path: artifacts/ubuntu24
        name: guardian-linux64-ubuntu24
        allow_forks: false

    - name: Extract nested artifacts
      run: |
        mkdir -p artifacts/extracted
        
        # Extract Windows artifacts
        if [ -d "artifacts/windows" ]; then
          find artifacts/windows -name "*.zip" -exec unzip -o {} -d artifacts/extracted \;
        fi
        
        # Extract Ubuntu 22 artifacts
        if [ -d "artifacts/ubuntu22" ]; then
          find artifacts/ubuntu22 -name "*.tar.gz" -exec tar -xzf {} -C artifacts/extracted \;
          find artifacts/ubuntu22 -name "*.sha256" -exec cp {} artifacts/extracted/ \;
        fi
        
        # Extract Ubuntu 24 artifacts
        if [ -d "artifacts/ubuntu24" ]; then
          find artifacts/ubuntu24 -name "*.tar.gz" -exec tar -xzf {} -C artifacts/extracted \;
          find artifacts/ubuntu24 -name "*.sha256" -exec cp {} artifacts/extracted/ \;
        fi
        
        echo "Extracted files:"
        find artifacts/extracted -type f

    - name: Upload artifacts to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.version.outputs.version }}"
        files: |
          artifacts/extracted/guardian-win64.zip
          artifacts/extracted/guardian-win64.zip.sha256
          artifacts/extracted/guardian-linux64-ubuntu-22.tar.gz
          artifacts/extracted/guardian-linux64-ubuntu-22.tar.gz.sha256
          artifacts/extracted/guardian-linux64-ubuntu-24.tar.gz
          artifacts/extracted/guardian-linux64-ubuntu-24.tar.gz.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  

        