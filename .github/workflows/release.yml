name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version from package.json
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Check if tag exists
      id: tag_exists
      run: |
        if git ls-remote --tags origin "v${{ steps.version.outputs.version }}" | grep -q "v${{ steps.version.outputs.version }}"; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.version.outputs.version }} does not exist"
        fi
        
    - name: Create Release Tag
      if: steps.tag_exists.outputs.exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
        git push origin "v${{ steps.version.outputs.version }}"
        echo "Created and pushed tag v${{ steps.version.outputs.version }}"
        
    - name: Skip tag creation
      if: steps.tag_exists.outputs.exists == 'true'
      run: |
        echo "Tag v${{ steps.version.outputs.version }} already exists, skipping tag creation"
        
    - name: Check if release exists
      id: release_exists
      run: |
        # Check if a release already exists for this tag
        if curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }}" \
          | grep -q '"id"'; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Release for tag v${{ steps.version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "No release found for tag v${{ steps.version.outputs.version }}"
        fi
        
    - name: Create Draft Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.version.outputs.version }}"
        draft: true
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        fail_on_unmatched_files: false 

        